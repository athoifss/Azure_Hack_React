{"version":3,"sources":["common/style.js","common/helper.js","common/api.js","common/config.js","components/Stats.js","components/Sidebar.js","components/Header.js","components/Tickets.js","components/TicketDetails.js","components/Profile.js","components/App.js","components/Preloader.js","components/Login.js","components/Doctor.js","components/Container.js","serviceWorker.js","index.js"],"names":["splitString","s","split","join","baseUrl","apiToken","postRequest","path","data","Axios","post","headers","getRequest","get","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","index","x","cos","y","sin","fill","textAnchor","dominantBaseline","toFixed","styleChartCard","border","style","height","marginRight","display","alignItems","Example","props","state","areaStats","count","userId","localStorage","getItem","then","resp","newPercent","newCount","percentObj","percentCount","key","push","name","value","setState","padding","fontSize","width","justifyContent","this","labelLine","label","dataKey","map","entry","length","margin","top","right","left","bottom","strokeDasharray","PureComponent","jsfiddleUrl","useStyles","makeStyles","link","textDecoration","color","Sidebar","classes","List","className","to","ListItem","button","ListItemIcon","ListItemText","textLink","primary","Divider","backgroundColor","root","background","logo","letterSpacing","fontWeight","aid","profilePicContainer","marginLeft","borderRadius","cursor","Header","flexDirection","paddingTop","ticketCard","marginBottom","transition","transform","cardLeft","cardRight","btnCard","btnClosed","lineHeight","textAlign","covidClass_High","covidClass_Medium","covidClass_Low","field","addIcon","position","addTicketText","paddingBottom","modal","modalContent","modalTop","borderBottom","paddingRight","paddingLeft","modalBtnClose","Tickets","useState","ticket","setTicket","React","setTicketClicked","appointment","Message","Nearest_Covid_Center","Map_link","ticketModal","setTicketModal","openModal","setOpenModal","isOpenAddText","setIsOpenAddText","handleCloseModal","history","useHistory","handleApptClick","id","newTicketModal","user_id","status","ticket_status","timeCreated","Date","created_at","getMonth","getDate","getFullYear","covidClass","covid_class","hasAppt","has_appointment","hasPresc","has_prescription","prescription","ticketId","ticket_id","console","log","useEffect","stateData","forEach","appointments","catch","err","onClick","parseInt","message","alertHandler","handleOpenModal","onMouseEnter","onMouseLeave","item","createdDate","cardItem","e","stopPropagation","btnBot","btnAppt","Modal","aria-labelledby","aria-describedby","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","disableBackdropClick","Fade","in","paper","respField","respFieldHeader","reportSec","fieldCont","secHeader","secCont","medCont","medName","medDose","TicketDetails","presc","symptoms","fever","feverTemp","feverType","gi","vomit","diarhhea","abdomenPain","bodyPain","bodyPainType","headache","respDis","cough","lossSmell","soreThroat","shortnessBreath","runnyNose","noseBlock","days","ui","allergy","medicRelief","covidConnect","url","URL","window","location","href","coughType","respData","fever_temp","fever_type","body_pain_type","bool","a","days_since_onset","feverBool","covid_connect","diarrhea","abdominalPain","abdominal_pain","lossOfSmell","sore_throat","runny_nose","secContent","dosage","reportRoot","respValue","theme","Profile","src","profileDetails","styleIframe","appBar","boxShadow","hide","drawer","flexShrink","drawerPaper","marginTop","content","flexGrow","chatBtn","router","PersistentDrawerLeft","isOpenAlert","setIsOpenAlert","val","sweetAlert","show","title","text","onConfirm","CssBaseline","AppBar","Toolbar","Drawer","variant","exact","render","drawerHeader","backdrop","zIndex","SimpleBackdrop","CircularProgress","leftText","form","input","inputIcon","order1","order","order2","btnLogin","Login","loading","setLoading","segLogin","setSegLogin","orderLeft","setOrderLeft","orderRight","setOrderRight","password","loginData","setLoginData","LoginSubmitHandler","preventDefault","setItem","finally","onChange","newData","target","onSubmit","placeholder","type","class","styleAddIcon","styleForm","boxSizing","topBar","topLeftTop","topLeftBottom","btnReport","btnPresc","main","rightDiv","rightDivField","trow","tabValue","align","buttons","apptBtn","orBox","dropdown","btnSubmit","Doctor","age","gender","user","setUser","setAreaStats","payload","setPayload","screen","setScreen","medicine","setPresc","setTicketId","formData","setFormData","feedbackData","setFeedbackData","switchScreen","appointmentSubmitHandler","date","time_slot","onSubmitResponse","resp2","searchParams","active_ticket","ticketStatus","area_stats","Object","entries","actualData","splitt","ticketClose","feedbackPostData","feedback","monitoring_days","monitoring","ticket_close","newArray","i","row","options","Container","isLoggedIn","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a6d48b5e.chunk.js","sourcesContent":["export default {\n  primary: \"#083d77\",\n  primaryText: \"white\",\n  secondary: \"#e53d00\",\n  secondaryText: \"white\",\n  greyLight: \"rgba(1,1,1,0.2)\",\n  greyMid: \"rgba(1,1,1,0.5)\",\n  greyDark: \"rgba(1,1,1,0.7)\",\n};\n","export const splitString = (s) => {\n  let arrWords = s.split(\"_\");\n  return arrWords.join(\" \");\n};\n\nexport const capitaliseWord=(word)=>{\n  return word[0].toUpperCase() + word.slice(1).toLowerCase();\n}\n","import Axios from \"axios\";\nimport config from \"./config.js\";\n\nconst { baseUrl, apiToken } = config;\n\nexport const postRequest = (path, data) => {\n  return Axios.post(`${baseUrl}/${path}`, data, {\n    headers: {\n      \"auth-key\": apiToken,\n    },\n  });\n};\n\nexport const getRequest = (path) => {\n  return Axios.get(`${baseUrl}/${path}`, {\n    headers: {\n      \"auth-key\": apiToken,\n    },\n  });\n};\n","export default {\n  baseUrl: \"http://52.172.158.219:8000/api\",\n  apiToken: \"4ygdf5gthhyxx#45\",\n};\n","import React, { PureComponent } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  PieChart,\n  Pie,\n  Sector,\n  Cell,\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\n\nimport style from \"../common/style\";\n\nimport { splitString } from \"../common/helper\";\nimport { getRequest } from \"../common/api.js\";\n\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\", \"#c41823\"];\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n  index,\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text\n      x={x}\n      y={y}\n      fill=\"white\"\n      textAnchor={x > cx ? \"start\" : \"end\"}\n      dominantBaseline=\"central\"\n    >\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\nconst styleChartCard = {\n  border: `1px solid ${style.greyLight}`,\n  height: \"450px\",\n  marginRight: \"10px\",\n  display: \"flex\",\n  alignItems: \"center\",\n};\n\nexport default class Example extends PureComponent {\n  static jsfiddleUrl = \"https://jsfiddle.net/alidingling/pb1jwdt1/\";\n  constructor(props) {\n    super(props);\n    this.state = { areaStats: { percent: [], count: [] } };\n  }\n\n  componentDidMount() {\n    let userId = localStorage.getItem(\"userId\");\n    getRequest(`Users/area/stats/${userId}`).then((resp) => {\n      let newPercent = [];\n      let newCount = [];\n      let percentObj = resp.data[\"area_stats\"].percent;\n      let percentCount = resp.data[\"area_stats\"].count;\n      for (let key in percentObj) {\n        newPercent.push({\n          name: splitString(key),\n          value: percentObj[key],\n        });\n      }\n      for (let key in percentCount) {\n        newCount.push({\n          name: splitString(key),\n          count: percentCount[key],\n        });\n      }\n      this.setState({\n        areaStats: {\n          percent: newPercent,\n          count: newCount,\n        },\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{ padding: \"20px 5px 20px 10px\", fontSize: \"1.5em\" }}>\n          Area Statistics\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            width: \"100%\",\n            height: \"100%\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <div style={styleChartCard}>\n            <PieChart width={400} height={400}>\n              <Legend />\n              <Pie\n                data={this.state.areaStats.percent}\n                cx={200}\n                cy={200}\n                labelLine={false}\n                label={renderCustomizedLabel}\n                outerRadius={140}\n                fill=\"#8884d8\"\n                dataKey=\"value\"\n              >\n                {this.state.areaStats.percent.map((entry, index) => (\n                  <Cell\n                    key={`cell-${index}`}\n                    fill={COLORS[index % COLORS.length]}\n                  />\n                ))}\n              </Pie>\n            </PieChart>\n          </div>\n\n          <div style={styleChartCard}>\n            <BarChart\n              width={600}\n              height={400}\n              data={this.state.areaStats.count}\n              margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip />\n              <Bar dataKey=\"count\" fill={\"#FACF5A\"} />\n            </BarChart>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AccountBoxIcon from \"@material-ui/icons/PermIdentity\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n  link: {\n    textDecoration: \"none\",\n    \"&:link\": {\n      color: \"white\",\n    },\n    \"&:hover\": {\n      color: \"white\",\n    },\n    \"&:visited\": {\n      color: \"white\",\n    },\n  },\n}));\nconst Sidebar = () => {\n  const classes = useStyles();\n  return (\n    <List>\n      <Link className={classes.link} to=\"/profile\">\n        <ListItem button>\n          <ListItemIcon>\n            <AccountBoxIcon style={{ fill: \"white\" }} />\n          </ListItemIcon>\n          <ListItemText className={classes.textLink} primary={\"Profile\"} />\n        </ListItem>\n      </Link>\n      <Divider style={{ backgroundColor: \"white\" }} />\n\n      <Link className={classes.link} to=\"/tickets\">\n        <ListItem button>\n          <ListItemIcon>\n            <LocalHospitalIcon style={{ fill: \"white\" }} />\n          </ListItemIcon>\n          <ListItemText className={classes.textLink} primary={\"Tickets\"} />\n        </ListItem>\n      </Link>\n      <Divider style={{ backgroundColor: \"white\" }} />\n      <Link className={classes.link} to=\"/stats\">\n        <ListItem button>\n          <ListItemIcon>\n            <TimelineIcon style={{ fill: \"white\" }} />\n          </ListItemIcon>\n          <ListItemText primary={\"Statistics\"} />\n        </ListItem>\n      </Link>\n      <Divider style={{ backgroundColor: \"white\" }} />\n    </List>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport style from \"../common/style.js\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    background: \"transparent\",\n    display: \"flex\",\n    width: \"100%\",\n    alignItems: \"center\"\n  },\n  logo: {\n    fontSize: \"2em\",\n    letterSpacing: \"1.1px\",\n    fontWeight: \"bold\",\n  },\n  aid: {\n    color: \"white\",\n  },\n  profilePicContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginLeft: \"auto\",\n    background: style.greyMid,\n    width: \"50px\",\n    height: \"50px\",\n    borderRadius: \"50%\",\n    cursor: \"pointer\",\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <div className={classes.logo}>\n        <span className={classes.aid}>Health</span>\n        <span>Aid</span>\n      </div>\n      <div className={classes.profilePicContainer}>A</div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { getRequest, postRequest } from \"../common/api\";\nimport AddIcon from \"@material-ui/icons/ControlPoint\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport { Fade } from \"@material-ui/core\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport style from \"../common/style\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    paddingTop: \"15px\",\n  },\n  ticketCard: {\n    width: \"80%\",\n    height: \"100px\",\n    border: style.secondary,\n    borderRadius: \"10px\",\n    marginBottom: \"15px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    background: \"rgba(1,1,1,0.1)\",\n    transition: \"all 0.2s\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      transform: \"scale(1.05)\",\n    },\n  },\n  cardLeft: {\n    width: \"50%\",\n    padding: \"0 20px\",\n  },\n  cardRight: {\n    padding: \"0 20px\",\n    width: \"50%\",\n    display: \"flex\",\n  },\n  btnCard: {\n    display: \"block\",\n    marginLeft: \"auto\",\n    width: \"150px\",\n    height: \"40px\",\n    background: style.secondary,\n    border: \"none\",\n    color: \"white\",\n    cursor: \"pointer\",\n    borderRadius: \"5px\",\n  },\n  btnClosed: {\n    background: \"rgba(1,1,1,0.2)\",\n    display: \"block\",\n    marginLeft: \"auto\",\n    width: \"200px\",\n    lineHeight: \"40px\",\n    height: \"40px\",\n    padding: \"0 5px\",\n    textAlign: \"center\",\n    borderRadius: \"5px\",\n  },\n  covidClass_High: {\n    color: \"red\",\n    fontWeight: \"bold\",\n  },\n  covidClass_Medium: {\n    color: \"orange\",\n    fontWeight: \"bold\",\n  },\n  covidClass_Low: {\n    color: \"green\",\n    fontWeight: \"bold\",\n  },\n  field: {\n    display: \"inline-block\",\n    width: \"100px\",\n    fontSize: \"1.1em\",\n    fontWeight: \"medium\",\n  },\n  addIcon: {\n    position: \"absolute\",\n    bottom: \"50px\",\n    right: \"90px\",\n    width: \"200px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n  },\n  addTicketText: {\n    paddingBottom: \"15px\",\n    fontSize: \"1.5em\",\n    cursor: \"pointer\",\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"none\",\n    width: \"100%\",\n    border: \"none\",\n  },\n  modalContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    border: \"none\",\n    padding: \"5px 20px\",\n    background: \"white\",\n    border: \"none\",\n  },\n  modalTop: {\n    width: \"100%\",\n    borderBottom: \"1px solid rgba(1,1,1,0.1)\",\n    background: \"white\",\n    paddingRight: \"10px\",\n    height: \"60px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: \"20px\",\n    fontSize: \"1.4em\",\n  },\n  modalBtnClose: {\n    marginLeft: \"auto\",\n    width: \"20px\",\n    fontSize: \"2em\",\n    cursor: \"pointer\",\n  },\n}));\n\nconst Tickets = (props) => {\n  const classes = useStyles();\n  const [ticket, setTicket] = useState([]);\n  const [ticketClicked, setTicketClicked] = React.useState(0);\n\n  const [ticketModal, setTicketModal] = React.useState({\n    appointment: {\n      Message: \"\",\n      Nearest_Covid_Center: \"\",\n      Map_link: \"\",\n      \"Contact Number\": \"\",\n    },\n  });\n\n  const [openModal, setOpenModal] = React.useState();\n  const [isOpenAddText, setIsOpenAddText] = useState(false);\n\n  function handleOpenModalAppt() {\n    setOpenModal(true);\n  }\n\n  function handleCloseModal() {\n    setOpenModal(false);\n  }\n\n  let history = useHistory();\n  function handleTicketClick(id) {\n    history.push(`tickets/details/${id}`);\n  }\n\n  function handleApptClick(id) {\n    setTicketClicked(id);\n    getRequest(`Tickets/${id}`).then((resp) => {\n      let data = resp.data;\n      let newTicketModal = {\n        userId: data.user_id,\n        status: data.ticket_status,\n        timeCreated: [\n          new Date(data.created_at).getMonth(),\n          new Date(data.created_at).getDate(),\n          new Date(data.created_at).getFullYear(),\n        ],\n        covidClass: data.covid_class,\n        hasAppt: data.has_appointment,\n        appointment: data.appointment,\n        hasPresc: data.has_prescription,\n        prescription: data.prescription,\n        ticketId: data.ticket_id,\n      };\n\n      setTicketModal(newTicketModal);\n      console.log(newTicketModal);\n      handleOpenModalAppt();\n    });\n  }\n\n  function addClickHandler() {\n    let userId = localStorage.getItem(\"userId\");\n    postRequest(\"Tickets/create\", { user_id: parseInt(userId) })\n      .then((resp) => {\n        if (resp.data.message === \"Already has a open ticket\") {\n          props.alertHandler(true);\n        } else {\n          props.handleOpenModal();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  useEffect(() => {\n    postRequest(\"Tickets/history\", {\n      user_id: localStorage.getItem(\"userId\"),\n    })\n      .then((resp) => {\n        let stateData = [];\n        resp.data[\"history\"].forEach((data) => {\n          let covidClass = \"\";\n          if (data.covid_class) {\n            covidClass = data.covid_class;\n          } else {\n            covidClass = \"N/A (no consulation done)\";\n          }\n          stateData.push({\n            userId: data.user_id,\n            status: data.ticket_status,\n            timeCreated: [\n              new Date(data.created_at).getMonth(),\n              new Date(data.created_at).getDate(),\n              new Date(data.created_at).getFullYear(),\n            ],\n            covidClass: covidClass,\n            hasAppt: data.has_appointment,\n            appointments: data.appointment,\n            hasPresc: data.has_prescription,\n            prescription: data.prescription,\n            ticketId: data.ticket_id,\n          });\n        });\n        setTicket(stateData);\n        console.log(stateData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [props]);\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.addIcon}>\n        {isOpenAddText ? (\n          <div className={classes.addTicketText}>Add a new ticket</div>\n        ) : (\n          <></>\n        )}\n        <AddIcon\n          onClick={addClickHandler}\n          fontSize=\"large\"\n          onMouseEnter={() => setIsOpenAddText(true)}\n          onMouseLeave={() => setIsOpenAddText(false)}\n        />\n      </div>\n      {ticket.map((item) => {\n        {\n          console.log(item.classes);\n        }\n        return (\n          <div\n            key={`${item.ticketId}_${item.classes}`}\n            className={classes.ticketCard}\n            onClick={() => {\n              handleTicketClick(item.ticketId);\n            }}\n          >\n            <div className={classes.cardLeft}>\n              <div className={`${classes.createdDate} ${classes.cardItem}`}>\n                <span className={classes.field}>Created On</span>\n                {item.timeCreated[1]}/{item.timeCreated[0] + 1}/\n                {item.timeCreated[2]}\n              </div>\n              <div className={`${classes.covidClass} ${classes.cardItem}`}>\n                <span className={classes.field}>Covid Risk</span>\n                <span className={classes[`covidClass_${item.covidClass}`]}>\n                  {item.covidClass}\n                </span>\n              </div>\n            </div>\n\n            {\n              // Open -> Inprogress -> Consulting -> [Monitoring] -> Closed\n              // Open = Consult Now\n              // In Progress = Consult Now -> Consulting ->\n              // Monitoring = Update Symptomps\n              // Consulting = Awaiting Doctor Response\n              // Closed = Closed\n            }\n            <div className={classes.cardRight}>\n              {item.status === \"open\" ? (\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    props.handleOpenModal();\n                  }}\n                  className={`${classes.btnBot} ${classes.btnCard}`}\n                >\n                  Consult Now\n                </button>\n              ) : item.status === \"monitoring\" ? (\n                <button\n                  onClick={props.handleOpenModal}\n                  className={`${classes.btnCard} ${classes.btnAppt}`}\n                >\n                  Update Symptomps\n                </button>\n              ) : item.status === \"consulting\" ? (\n                <div className={`${classes.btnClosed}`}>\n                  Awating Doctor Response\n                </div>\n              ) : item.status === \"in-progress\" ? (\n                <button\n                  onClick={props.handleOpenModal}\n                  className={`${classes.btnBot} ${classes.btnCard}`}\n                >\n                  Consult Now\n                </button>\n              ) : (\n                <>\n                  <div className={`${classes.btnClosed}`}>View Details</div>\n                </>\n              )}\n              {item.hasAppt ? (\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    handleApptClick(item.ticketId);\n                  }}\n                  className={`${classes.btnBot} ${classes.btnCard}`}\n                >\n                  View Appointment\n                </button>\n              ) : (\n                <></>\n              )}\n            </div>\n          </div>\n          // </Link>\n        );\n      })}\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={openModal}\n        onClose={handleCloseModal}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 400,\n        }}\n        disableBackdropClick={true}\n      >\n        <Fade in={openModal}>\n          <div className={classes.paper}>\n            <div id=\"transition-modal-description\">\n              <div className={classes.modalTop}>\n                <div>View Appointment</div>\n                <div\n                  onClick={handleCloseModal}\n                  className={classes.modalBtnClose}\n                >\n                  &times;\n                </div>\n              </div>\n              <div className={classes.modalContent}>\n                <div>{ticketModal.appointment.Message}</div>\n                <div>\n                  Location : {ticketModal.appointment.Nearest_Covid_Center}\n                </div>\n                <div> Map: {ticketModal.appointment.Map_link}</div>\n                <div>Contact: {ticketModal.appointment[\"Contact Number\"]}</div>\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Tickets;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles, emphasize } from \"@material-ui/core/styles\";\nimport { getRequest } from \"../common/api.js\";\n\nconst useStyles = makeStyles(() => ({\n  root: { paddingLeft: \"10px\" },\n  respField: {\n    display: \"inline-block\",\n  },\n  respFieldHeader: {\n    paddingBottom: \"10px\",\n    fontWeight: \"bold\",\n  },\n  reportSec: {\n    marginBottom: \"30px\",\n  },\n  fieldCont: {\n    padding: \"5px 0\",\n  },\n  secHeader: {\n    fontWeight: \"bold\",\n    fontSize: \"2em\",\n    marginBottom: \"20px\",\n  },\n  secCont: {\n    borderBottom: \"1px solid rgba(1,1,1,0.1)\",\n    padding: \"20px 0\",\n  },\n  medCont: {\n    display: \"flex\",\n  },\n  medName: {\n    width: \"100px\",\n  },\n  medDose: {\n    width: \"100px\",\n    paddingLeft: \"10px\",\n  },\n}));\n\nconst TicketDetails = () => {\n  const [ticket, setTicket] = useState({\n    presc: [],\n    symptoms: {\n      fever: {\n        feverTemp: \"\",\n        feverType: \"\",\n      },\n      gi: {\n        vomit: true,\n        diarhhea: true,\n        abdomenPain: true,\n      },\n      bodyPain: {\n        bodyPainType: \"\",\n        headache: true,\n      },\n      respDis: {\n        cough: \"\",\n        lossSmell: true,\n        soreThroat: true,\n        shortnessBreath: true,\n        runnyNose: true,\n        noseBlock: true,\n      },\n      days: 0,\n      ui: true,\n      allergy: 0,\n      medicRelief: true,\n      covidConnect: true,\n    },\n  });\n  const classes = useStyles();\n\n  useEffect(() => {\n    const url = new URL(window.location.href);\n    let ticketId = url.href.split(\"/\")[url.href.split(\"/\").length - 1];\n    console.log(ticketId);\n\n    getRequest(`Tickets/${ticketId}`).then((resp) => {\n      let data = resp.data.symptoms.symptoms;\n      let respData = resp.data;\n      let feverTemp;\n      let feverType;\n      let bodyPainType;\n      let coughType;\n\n      switch (data.fever_temp) {\n        case 0:\n          feverTemp = \"Not Measured\";\n          break;\n        case 1:\n          feverTemp = \"Mild (98F to 100F)\";\n          break;\n        case 2:\n          feverTemp = \"Moderate (100F to 102F)\";\n          break;\n        case 3:\n          feverTemp = \"High (Above 102F)\";\n        default:\n          feverType = \"None\";\n          break;\n      }\n\n      switch (data.fever_type) {\n        case 0:\n          feverType = \"Continous\";\n          break;\n        case 1:\n          feverType = \"With Chills\";\n          break;\n        case 2:\n          feverType = \"Increase at night\";\n        default:\n          feverType = \"None\";\n          break;\n      }\n\n      switch (data.body_pain_type) {\n        case 0:\n          bodyPainType = \"Weakness and fatigue\";\n          break;\n        case 1:\n          bodyPainType = \"Joint pain & Lower back pain\";\n          break;\n        case 2:\n          bodyPainType = \"Chestpain\";\n          break;\n        case 3:\n          bodyPainType = \"Stiffness & Swells\";\n        default:\n          bodyPainType = \"None\";\n          break;\n      }\n\n      switch (data.cough) {\n        case 0:\n          coughType = \"Dry Cough\";\n          break;\n        case 1:\n          coughType = \"Sore Throat\";\n          break;\n        case 2:\n          coughType = \"Wet cough with sputtum\";\n          break;\n        default:\n          coughType = \"None\";\n          break;\n      }\n\n      function bool(a) {\n        if (a == 1) return \"Yes\";\n        else if (a == 0) return \"No\";\n        else return \"None\";\n      }\n\n      let stateData = {\n        hasPresc: respData.has_prescription,\n        presc: respData.prescription,\n        symptoms: {\n          days: data.days_since_onset,\n          ui: bool(data.ui),\n          allergy: bool(data.allergy),\n          feverBool: bool(data.fever),\n          covidConnect: bool(data.covid_connect),\n          fever: {\n            feverType,\n            feverTemp,\n          },\n          gi: {\n            vomit: bool(data.vomit),\n            diarrhea: bool(data.diarrhea),\n            abdominalPain: bool(data.abdominal_pain),\n          },\n          bodyPain: {\n            bodyPainType,\n            headache: bool(data.headache),\n          },\n          respDis: {\n            cough: coughType,\n            lossOfSmell: bool(data[\"loss_of_smell_taste\"]),\n            soreThroat: bool(data.sore_throat),\n            runnyNose: bool(data.runny_nose),\n            noseBlock: bool(data[\"nose_block\"]),\n            shortnessBreath: bool(data[\"shortness_of_breath\"]),\n          },\n        },\n      };\n\n      setTicket(stateData);\n      console.log(stateData);\n    });\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.secCont}>\n        <div className={classes.secHeader}>Doctor Prescription</div>\n        <div className={classes.secContent}>\n          {ticket.hasPresc ? (\n            <div>\n              {ticket.presc.map((item) => {\n                return (\n                  <div className={classes.medCont}>\n                    <div className={classes.medName}>{item.name}</div>\n                    <div className={classes.medDose}>{item.dosage}</div>\n                  </div>\n                );\n              })}\n            </div>\n          ) : (\n            <div>\n              <em>Waiting for remote doctor to prescribe medicines</em>\n            </div>\n          )}\n        </div>\n      </div>\n      <div className={classes.secCont}>\n        <div className={classes.secHeader}>Report</div>\n        <div className={classes.secContent}>\n          <div className={classes.reportRoot}>\n            <div className={classes.reportSec}>\n              <div className={classes.fieldCont}>\n                <span className={classes.respFieldHeader}>\n                  No of days since onset of symptomps-\n                </span>\n                <span className={classes.respValue}>\n                  {ticket.symptoms.days}\n                </span>\n              </div>\n              <div className={classes.fieldCont}>\n                <span className={classes.respFieldHeader}>Allergy- </span>\n                <span className={classes.respValue}>\n                  {ticket.symptoms.allergy}\n                </span>\n              </div>\n              <div className={classes.fieldCont}>\n                <span className={classes.respFieldHeader}>\n                  Urinary Infection{\" \"}\n                </span>\n                <span className={classes.respValue}>{ticket.symptoms.ui}</span>\n              </div>\n            </div>\n            <div className={classes.reportSec}>\n              <span\n                className={`${classes.respField} ${classes.respFieldHeader}`}\n              >\n                Fever -\n              </span>\n              <span> {ticket.symptoms.feverBool}</span>\n              {ticket.symptoms.feverBool === \"Yes\" ? (\n                <div className={classes.reportSec}>\n                  <div className={classes.fieldCont}>\n                    <span className={classes.respField}>Fever Temp - </span>\n                    <span className={classes.respValue}>\n                      {ticket.symptoms.fever.feverTemp}\n                    </span>\n                  </div>\n                  <div className={classes.fieldCont}>\n                    <span className={classes.respField}>Fever Type - </span>\n                    <span className={classes.respValue}>\n                      {ticket.symptoms.fever.feverType}\n                    </span>\n                  </div>\n                </div>\n              ) : (\n                <></>\n              )}\n            </div>\n\n            <div className={classes.reportSec}>\n              <div\n                className={`${classes.respField} ${classes.respFieldHeader}`}\n              >\n                Gastrointestinal (GI) symptoms\n              </div>\n              <div className={classes.fieldCont}>\n                <span className={classes.respField}>Vomit - </span>\n                <span className={classes.respValue}>\n                  {ticket.symptoms.gi.vomit}\n                </span>\n              </div>\n              <div className={classes.fieldCont}>\n                <span className={classes.respField}>Diarrhea - </span>\n                <span className={classes.respValue}>\n                  {ticket.symptoms.gi.diarrhea}\n                </span>\n              </div>\n              <div className={classes.fieldCont}>\n                <span className={classes.respField}>Abdominal Pain - </span>\n                <span className={classes.respValue}>\n                  {ticket.symptoms.gi.abdominalPain}\n                </span>\n              </div>\n            </div>\n\n            <div className={classes.reportSec}>\n              <div\n                className={`${classes.respField} ${classes.respFieldHeader}`}\n              >\n                Body Pain\n              </div>\n              <div className={classes.fieldCont}>\n                <span className={classes.respField}>Body Pain Type - </span>\n                <span className={classes.respValue}>\n                  {ticket.symptoms.bodyPain.bodyPainType}\n                </span>\n              </div>\n              <div className={classes.fieldCont}>\n                <span className={classes.respField}>Headache - </span>\n                <span className={classes.respValue}>\n                  {ticket.symptoms.bodyPain.headache}\n                </span>\n              </div>\n            </div>\n\n            <div className={classes.reportSec}>\n              <div\n                className={`${classes.respField} ${classes.respFieldHeader}`}\n              >\n                Respiratory Disorder\n              </div>\n              <div className={classes.fieldCont}>\n                <span className={classes.respField}>Cough - </span>\n                <span className={classes.respValue}>\n                  {ticket.symptoms.respDis.cough}\n                </span>\n              </div>\n              <div className={classes.fieldCont}>\n                <span className={classes.respField}>\n                  Loss of smell and taste -\n                </span>\n                <span className={classes.respValue}>\n                  {ticket.symptoms.respDis.lossOfSmell}\n                </span>\n              </div>\n              <div className={classes.fieldCont}>\n                <span className={classes.respField}>Sore Throat - </span>\n                <span className={classes.respValue}>\n                  {ticket.symptoms.respDis.soreThroat}\n                </span>\n              </div>\n              <div className={classes.fieldCont}>\n                <span className={classes.respField}>Runny Nose - </span>\n                <span className={classes.respValue}>\n                  {ticket.symptoms.respDis.runnyNose}\n                </span>\n              </div>\n              <div className={classes.fieldCont}>\n                <span className={classes.respField}>Shortnes of breath -</span>\n                <span className={classes.respValue}>\n                  {ticket.symptoms.respDis.soreThroat}\n                </span>\n              </div>\n            </div>\n\n            <div className={classes.reportSec}>\n              <div className={classes.fieldCont}>\n                <span\n                  className={`${classes.respField} ${classes.respFieldHeader}`}\n                >\n                  Recent Covid Interactions -\n                </span>\n                <span className={classes.respValue}>\n                  {ticket.symptoms.covidConnect}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TicketDetails;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { getRequest, postRequest } from \"../common/api.js\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { display: \"flex\", justifyContent: \"center\", width: \"100%\" },\n  profilePicContainer: {\n    width: \"200px\",\n    height: \"200px\",\n    \"& img\": {\n      width: \"100%\",\n      height: \"100%\",\n    },\n  },\n}));\nconst Profile = () => {\n  useEffect(() => {\n    getRequest(`Users/${localStorage.getItem(\"userId\")}`);\n  });\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <div className={classes.profilePicContainer}>\n        <img src=\"https://www.ibts.org/wp-content/uploads/2017/08/iStock-476085198.jpg\" />\n      </div>\n      <div className={classes.profileDetails}>\n        <div className={classes.field}></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport AssistantIcon from \"@material-ui/icons/Assistant\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport { Fade } from \"@material-ui/core\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Iframe from \"react-iframe\";\nimport style from \"../common/style\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport Stats from \"./Stats\";\nimport Sidebar from \"./Sidebar\";\nimport Header from \"./Header\";\nimport Tickets from \"./Tickets\";\nimport TicketDetails from \"./TicketDetails\";\nimport SweetAlert from \"sweetalert2-react\";\nimport Profile from \"./Profile\";\n\nconst drawerWidthVal = 280;\n\nconst styleIframe = {\n  border: \"1px solid red\",\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    width: \"100%\",\n    padding: \"15px 15px\",\n  },\n  appBar: {\n    background: style.primary,\n    boxShadow: \"none\",\n    borderBottom: \"1px solid white !important\",\n    height: \"70px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    flexShrink: 0,\n    width: drawerWidthVal,\n  },\n\n  drawerPaper: {\n    width: drawerWidthVal,\n    background: style.primary,\n    marginTop: \"70px\",\n    paddingTop: \"50px\",\n  },\n  content: {\n    flexGrow: 1,\n  },\n  chatBtn: {\n    position: \"absolute\",\n    bottom: \"20px\",\n    right: \"20px\",\n    cursor: \"pointer\",\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"none\",\n  },\n  modalContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    border: \"none\",\n    padding: \"5px 20px\",\n    background: \"white\",\n  },\n  router: {\n    paddingTop: \"65px\",\n    width: \"100%\",\n  },\n  logo: {\n    fontWeight: \"bold\",\n    fontSize: \"2em\",\n    letterSpacing: \"1.5px\",\n  },\n}));\n\nexport default function PersistentDrawerLeft() {\n  const classes = useStyles();\n  const [openModal, setOpenModal] = React.useState(false);\n\n  const handleOpenModal = () => {\n    setOpenModal(true);\n    console.log(\n      `https://healthaidbot.azurewebsites.net/?userId=${localStorage.getItem(\n        \"userId\"\n      )}`\n    );\n  };\n  const handleCloseModal = () => {\n    setOpenModal(false);\n  };\n\n  const [isOpenAlert, setIsOpenAlert] = React.useState(false);\n  function alertHandler(val) {\n    setIsOpenAlert(val);\n  }\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <div className={classes.sweetAlert}>\n          <div>\n            <SweetAlert\n              show={isOpenAlert}\n              title=\"Ticket already opened\"\n              text=\"Please close the ongoing ticket to raise a new one\"\n              onConfirm={() => alertHandler(false)}\n            />\n          </div>\n        </div>\n\n        <CssBaseline />\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar>\n            <Header />\n          </Toolbar>\n        </AppBar>\n\n        <Drawer\n          className={`${classes.drawer}`}\n          variant=\"permanent\"\n          classes={{ paper: classes.drawerPaper }}\n        >\n          <Sidebar />\n        </Drawer>\n\n        <div className={classes.router}>\n          <Route\n            exact\n            path=\"/stats\"\n            render={(props) => {\n              return <Stats />;\n            }}\n          />\n          <Route\n            exact\n            path=\"/profile\"\n            render={(props) => {\n              return <Profile />;\n            }}\n          />\n          <Route\n            exact\n            path=\"/tickets\"\n            render={(props) => {\n              return (\n                <Tickets\n                  handleOpenModal={handleOpenModal}\n                  alertHandler={alertHandler}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/tickets/details/\"\n            render={(props) => {\n              return <TicketDetails />;\n            }}\n          />\n\n          <Route\n            exact\n            path=\"/\"\n            render={(props) => {\n              return <Redirect to=\"/profile\" />;\n            }}\n          />\n        </div>\n\n        <div className={classes.drawerHeader} />\n\n        <Modal\n          aria-labelledby=\"transition-modal-title\"\n          aria-describedby=\"transition-modal-description\"\n          className={classes.modal}\n          open={openModal}\n          onClose={handleCloseModal}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 400,\n          }}\n          disableBackdropClick={true}\n        >\n          <Fade in={openModal}>\n            <div className={classes.paper}>\n              <div id=\"transition-modal-description\">\n                <div className={classes.modalContent}>\n                  <Iframe\n                    style={styleIframe}\n                    url={`http://healthbot.centralindia.azurecontainer.io:8080/?userId=${localStorage.getItem(\n                      \"userId\"\n                    )}`}\n                    width=\"500px\"\n                    height=\"600px\"\n                    id=\"myId\"\n                    className=\"myClassname\"\n                    display=\"initial\"\n                    position=\"relative\"\n                  />\n                </div>\n              </div>\n            </div>\n          </Fade>\n        </Modal>\n      </div>\n    </Router>\n  );\n}\n","import React from \"react\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nexport default function SimpleBackdrop() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Backdrop className={classes.backdrop} open={true}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Preloader from \"./Preloader\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport { postRequest } from \"../common/api\";\n\nimport style from \"../common/style.js\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    height: \"100vh\",\n  },\n  left: {\n    width: \"30%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    backgroundColor: style.primary,\n    color: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: \"0px 20px\",\n  },\n  leftText: {\n    \"& h1\": {\n      fontSize: \"3em\",\n    },\n    \"& p\": {\n      fontSize: \"1.5em\",\n    },\n  },\n  right: {\n    width: \"70%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"50%\",\n  },\n  input: {\n    width: \"100%\",\n    height: \"40px\",\n    border: `1px solid ${style.greyLight}`,\n    marginBottom: \"10px\",\n    color: style.greyDark,\n    fontSize: \"1em\",\n    display: \"flex\",\n    \"& input\": {\n      height: \"100%\",\n      border: \"none\",\n      padding: \"0 10px 0 10px\",\n    },\n  },\n  inputIcon: {\n    height: \"100%\",\n    width: \"10%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  order1: {\n    order: 1,\n  },\n  order2: {\n    order: 2,\n  },\n  btnLogin: {\n    background: style.primary,\n    color: style.primaryText,\n    border: \"none\",\n    height: \"40px\",\n    width: \"100%\",\n    cursor: \"pointer\",\n  },\n}));\n\nconst Login = () => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [segLogin, setSegLogin] = useState(true);\n  const [orderLeft, setOrderLeft] = useState(classes.order1);\n  const [orderRight, setOrderRight] = useState(classes.order2);\n  const [loginData, setLoginData] = useState({\n    \"e-mail\": \"sai.hack.2021@gmail.com\",\n    password: \"test159\",\n  });\n\n  let history = useHistory();\n\n  function switchSides() {\n    if (segLogin) {\n      setOrderLeft(classes.order2);\n      setOrderRight(classes.order1);\n      setSegLogin(false);\n    } else {\n      setOrderRight(classes.order2);\n      setOrderLeft(classes.order1);\n      setSegLogin(true);\n    }\n  }\n\n  function LoginChangeHandler(e) {\n    let newData = { ...loginData };\n    newData[e.target.name] = e.target.value;\n    setLoginData(newData);\n    console.log(newData);\n  }\n\n  function LoginSubmitHandler(e) {\n    e.preventDefault();\n    setLoading(true);\n    console.log(loginData);\n    postRequest(\"Users/login\", loginData)\n      .then((resp) => {\n        console.log(resp.data);\n        localStorage.setItem(\"userId\", resp.data.user_id);\n        console.log(resp.data);\n        history.push(\"/\");\n      })\n      .catch((err) => console.log(err))\n      .finally(() => {\n        setLoading(false);\n      });\n  }\n\n  return (\n    <div className={classes.root}>\n      {loading ? (\n        <Preloader />\n      ) : (\n        <>\n          <div className={`${classes.left} ${orderLeft}`}>\n            <div className=\"logo\"></div>\n            <div className={classes.leftText}>\n              <h1>WELCOME BACK</h1>\n              <p>Please login with your details to use our services</p>\n              <button onClick={switchSides}>Click Me</button>\n            </div>\n          </div>\n          <div className={`${classes.right} ${orderRight}`}>\n            <form\n              onChange={LoginChangeHandler}\n              onSubmit={LoginSubmitHandler}\n              className={classes.form}\n            >\n              <div className={classes.input}>\n                <div className={classes.inputIcon}>\n                  <EmailIcon />\n                </div>\n                <input\n                  placeholder=\"email\"\n                  value={loginData[\"e-mail\"]}\n                  name=\"e-mail\"\n                />\n              </div>\n              <div className={classes.input}>\n                <div className={classes.inputIcon}>\n                  <LockIcon />\n                </div>\n                <input\n                  placeholder=\"password\"\n                  value={loginData[\"password\"]}\n                  className={classes.input}\n                  type=\"password\"\n                  name=\"password\"\n                />\n              </div>\n\n              <button class={classes.btnLogin} onClick={LoginSubmitHandler}>\n                Sign In\n              </button>\n            </form>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\n\nimport { getRequest, postRequest } from \"../common/api.js\";\nimport style from \"../common/style\";\nimport { splitString } from \"../common/helper\";\nimport Preloader from \"./Preloader\";\nimport AddIcon from \"@material-ui/icons/ControlPoint\";\n\nconst styleAddIcon = {\n  position: \"absolute\",\n  right: \"180px\",\n  fill: style.secondary,\n  cursor: \"pointer\",\n};\n\nconst styleForm = {\n  display: \"block\",\n  position: \"relative\",\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    padding: \"0\",\n    margin: \"0\",\n    boxSizing: \"border-box\",\n\n    \"& td\": {\n      height: \"35px\",\n      textAlign: \"left\",\n      width: \"250px\",\n      borderBottom: \"1px solid rgba(1,1,1,0.1)\",\n    },\n    \"& th\": {\n      textAlign: \"left\",\n      height: \"50px\",\n    },\n  },\n  topBar: {\n    width: \"100%\",\n    height: \"150px\",\n    background: style.primary,\n    display: \"flex\",\n    color: \"white\",\n  },\n  left: {\n    width: \"40%\",\n  },\n  topLeftTop: {\n    height: \"50px\",\n    lineHeight: \"50px\",\n    fontSize: \"1.8em\",\n    paddingTop: \"13px\",\n  },\n  topLeftBottom: {\n    display: \"flex\",\n    alignItems: \"flex-end\",\n    marginTop: \"auto\",\n    height: \"100px\",\n  },\n  btnReport: {\n    border: \"none\",\n    width: \"120px\",\n    height: \"40px\",\n    marginRight: \"1px\",\n    cursor: \"pointer\",\n    background: \"transparent\",\n    color: \"white\",\n    border: \"1px solid white\",\n  },\n  btnPresc: {\n    border: \"none\",\n    width: \"120px\",\n    height: \"40px\",\n    cursor: \"pointer\",\n    background: \"#0c69cf\",\n    color: \"white\",\n  },\n  right: {\n    paddingTop: \"20px\",\n    width: \"60%\",\n    padding: \"10px 10px\",\n  },\n  logo: {\n    textAlign: \"center\",\n    paddingLeft: \"50px\",\n  },\n  main: {\n    padding: \"30px 30px\",\n  },\n  rightDiv: {\n    marginBottom: \"10px\",\n  },\n  rightDivField: {\n    display: \"inline-block\",\n    width: \"100px\",\n  },\n  respField: {\n    display: \"inline-block\",\n  },\n  respFieldHeader: {\n    paddingBottom: \"10px\",\n    fontWeight: \"bold\",\n  },\n  reportSec: {\n    marginBottom: \"30px\",\n  },\n  fieldCont: {\n    padding: \"5px 0\",\n  },\n  input: {\n    padding: \"0px 10px\",\n    height: \"40px\",\n    width: \"300px\",\n    marginRight: \"20px\",\n    border: \"1px solid rgba(1,1,1,0.4)\",\n    marginBottom: \"20px\",\n  },\n  trow: {\n    width: \"200px\",\n    textAlign: \"center\",\n  },\n  tabValue: {\n    align: \"right\",\n  },\n  buttons: {\n    padding: \"10px 0\",\n  },\n  apptBtn: {\n    background: style.secondary,\n    border: \"none\",\n    color: \"white\",\n    width: \"250px\",\n    height: \"40px\",\n    marginRight: \"10px\",\n    cursor: \"pointer\",\n  },\n  orBox: {\n    padding: \"20px 0\",\n  },\n  dropdown: {\n    marginBottom: \"20px\",\n  },\n  btnSubmit: {\n    background: style.primary,\n    color: \"white\",\n    height: \"40px\",\n    width: \"100px\",\n    border: \"none\",\n  },\n}));\n\nconst Doctor = () => {\n  const classes = useStyles();\n  const [user, setUser] = React.useState({\n    name: \"Atif Hossain\",\n    age: \"21\",\n    gender: \"Male\",\n  });\n\n  const [areaStats, setAreaStats] = React.useState({ percent: {}, count: {} });\n  const [payload, setPayload] = useState({\n    symptoms: {\n      fever: {\n        feverTemp: \"\",\n        feverType: \"\",\n      },\n      gi: {\n        vomit: true,\n        diarhhea: true,\n        abdomenPain: true,\n      },\n      bodyPain: {\n        bodyPainType: \"\",\n        headache: true,\n      },\n      respDis: {\n        cough: \"\",\n        lossSmell: true,\n        soreThroat: true,\n        shortnessBreath: true,\n        runnyNose: true,\n        noseBlock: true,\n      },\n      days: 0,\n      ui: true,\n      allergy: 0,\n      medicRelief: true,\n      covidConnect: true,\n    },\n  });\n  const [loading, setLoading] = React.useState(false);\n  const [screen, setScreen] = React.useState(\"report\");\n  const [presc, setPresc] = React.useState({\n    count: 1,\n    data: [{ medicine: `medicine_1`, dosage: `dosage_1` }],\n  });\n\n  const [ticketId, setTicketId] = React.useState(\"\");\n  const [formData, setFormData] = React.useState([]);\n  const [feedbackData, setFeedbackData] = React.useState({});\n\n  function updatePrescForm() {\n    let newCount = presc.count + 1;\n    let newArray = presc.data;\n    newArray.push({\n      medicine: `medicine_${newCount}`,\n      dosage: `dosage_${newCount}`,\n    });\n    let newData = {\n      count: presc.count + 1,\n      data: newArray,\n    };\n\n    console.log(newData);\n    setPresc(newData);\n  }\n  function switchScreen(screen) {\n    if (screen === \"report\") {\n      setScreen(\"report\");\n    } else {\n      setScreen(\"presc\");\n    }\n  }\n  function bool(a) {\n    if (a == 1) return \"Yes\";\n    else if (a == 0) return \"No\";\n    else return \"None\";\n  }\n  function formChangeHandler(e) {\n    let newData = { ...formData };\n    newData[e.target.name] = e.target.value;\n    setFormData(newData);\n  }\n  function appointmentSubmitHandler(type) {\n    postRequest(\"Appointment/change\", {\n      ticket_id: parseInt(ticketId),\n      type: type,\n      date: \"21 Sept\",\n      time_slot: \"2PM-5PM\",\n    })\n      .then((resp) => {\n        onSubmitResponse();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  function onSubmitResponse() {\n    getRequest(`Tickets/${ticketId}`).then((resp2) => {\n      let respData = resp2.data;\n      let data = resp2.data.symptoms.symptoms;\n      let feverTemp;\n      let feverType;\n      let bodyPainType;\n      let coughType;\n\n      switch (data.fever_temp) {\n        case 0:\n          feverTemp = \"Not Measured\";\n          break;\n        case 1:\n          feverTemp = \"Mild (98F to 100F)\";\n          break;\n        case 2:\n          feverTemp = \"Moderate (100F to 102F)\";\n          break;\n        case 3:\n          feverTemp = \"High (Above 102F)\";\n        default:\n          feverType = \"None\";\n          break;\n      }\n\n      switch (data.fever_type) {\n        case 0:\n          feverType = \"Continous\";\n          break;\n        case 1:\n          feverType = \"With Chills\";\n          break;\n        case 2:\n          feverType = \"Increase at night\";\n        default:\n          feverType = \"None\";\n          break;\n      }\n\n      switch (data.body_pain_type) {\n        case 0:\n          bodyPainType = \"Weakness and fatigue\";\n          break;\n        case 1:\n          bodyPainType = \"Joint pain & Lower back pain\";\n          break;\n        case 2:\n          bodyPainType = \"Chestpain\";\n          break;\n        case 3:\n          bodyPainType = \"Stiffness & Swells\";\n        default:\n          bodyPainType = \"None\";\n          break;\n      }\n\n      switch (data.cough) {\n        case 0:\n          coughType = \"Dry Cough\";\n          break;\n        case 1:\n          coughType = \"Sore Throat\";\n          break;\n        case 2:\n          coughType = \"Wet cough with sputtum\";\n          break;\n        default:\n          coughType = \"None\";\n          break;\n      }\n\n      let hasPresc = true;\n      if (respData.prescription) {\n        hasPresc = true;\n      } else {\n        hasPresc = false;\n      }\n\n      let stateData = {\n        covidClass: respData.covid_class,\n        hasPresc,\n        symptoms: {\n          days: data.days_since_onset,\n          ui: bool(data.ui),\n          allergy: bool(data.allergy),\n          feverBool: bool(data.fever),\n          covidConnect: bool(data.covid_connect),\n          fever: {\n            feverType,\n            feverTemp,\n          },\n          gi: {\n            vomit: bool(data.vomit),\n            diarrhea: bool(data.diarrhea),\n            abdominalPain: bool(data.abdominal_pain),\n          },\n          bodyPain: {\n            bodyPainType,\n            headache: bool(data.headache),\n          },\n          respDis: {\n            cough: coughType,\n            lossOfSmell: bool(data[\"loss_of_smell_taste\"]),\n            soreThroat: bool(data.sore_throat),\n            runnyNose: bool(data.runny_nose),\n            noseBlock: bool(data[\"nose_block\"]),\n            shortnessBreath: bool(data[\"shortness_of_breath\"]),\n          },\n        },\n      };\n      console.log(stateData);\n      setPayload(stateData);\n    });\n  }\n\n  function formSubmitHandler(e) {\n    e.preventDefault();\n    let actualData = [];\n\n    for (let key in formData) {\n      let splitt = key.split(\"_\");\n      if (splitt[0] == \"medicine\") {\n        actualData.push({\n          name: formData[key],\n          dosage: formData[`dosage_${splitt[1]}`],\n        });\n      }\n    }\n\n    let ticketClose = true;\n    if (payload.covidClass === \"Medium\") {\n      ticketClose = false;\n    } else if (payload.covidClass === \"Low\") {\n      ticketClose = true;\n    }\n\n    let feedbackPostData = {\n      ticket_id: ticketId,\n      feedback: feedbackData.feedback,\n      monitoring_days: feedbackData.monitoring,\n      ticket_close: ticketClose,\n    };\n\n    let postData = {\n      ticket_id: ticketId,\n      prescription: actualData,\n    };\n    postRequest(\"Prescription/add\", postData)\n      .then((resp) => {\n        console.log(\"prescription submited\");\n        postRequest(\"Tickets/feedback\", feedbackPostData)\n          .then((resp) => {\n            console.log(\"feedback submitted\");\n            onSubmitResponse();\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function onSelectDays(e) {\n    console.log(e);\n    let newData = { ...feedbackData };\n    newData.monitoring = e.value;\n\n    setFeedbackData(newData);\n    console.log(newData);\n  }\n\n  function onSelectFeedback(e) {\n    console.log(e);\n    let newData = { ...feedbackData };\n    newData.feedback = e.value;\n\n    setFeedbackData(newData);\n    console.log(newData);\n  }\n\n  useEffect(() => {\n    const url = new URL(window.location.href);\n    let userId = url.searchParams.get(\"userId\");\n\n    getRequest(`Users/${userId}`)\n      .then((resp) => {\n        setUser(resp.data);\n        let ticketId = resp.data.active_ticket.ticket_id;\n        setTicketId(ticketId);\n        getRequest(`Tickets/${ticketId}`).then((resp2) => {\n          let respData = resp2.data;\n          let data = resp2.data.symptoms.symptoms;\n\n          let feverTemp;\n          let feverType;\n          let bodyPainType;\n          let coughType;\n\n          switch (data.fever_temp) {\n            case 0:\n              feverTemp = \"Not Measured\";\n              break;\n            case 1:\n              feverTemp = \"Mild (98F to 100F)\";\n              break;\n            case 2:\n              feverTemp = \"Moderate (100F to 102F)\";\n              break;\n            case 3:\n              feverTemp = \"High (Above 102F)\";\n            default:\n              feverType = \"None\";\n              break;\n          }\n\n          switch (data.fever_type) {\n            case 0:\n              feverType = \"Continous\";\n              break;\n            case 1:\n              feverType = \"With Chills\";\n              break;\n            case 2:\n              feverType = \"Increase at night\";\n            default:\n              feverType = \"None\";\n              break;\n          }\n\n          switch (data.body_pain_type) {\n            case 0:\n              bodyPainType = \"Weakness and fatigue\";\n              break;\n            case 1:\n              bodyPainType = \"Joint pain & Lower back pain\";\n              break;\n            case 2:\n              bodyPainType = \"Chestpain\";\n              break;\n            case 3:\n              bodyPainType = \"Stiffness & Swells\";\n            default:\n              bodyPainType = \"None\";\n              break;\n          }\n\n          switch (data.cough) {\n            case 0:\n              coughType = \"Dry Cough\";\n              break;\n            case 1:\n              coughType = \"Sore Throat\";\n              break;\n            case 2:\n              coughType = \"Wet cough with sputtum\";\n              break;\n            default:\n              coughType = \"None\";\n              break;\n          }\n\n          let hasPresc = false;\n          if (respData.prescription) {\n            hasPresc = true;\n          } else {\n            hasPresc = false;\n          }\n\n          let stateData = {\n            covidClass: respData.covid_class,\n            hasPresc,\n            ticketStatus: respData.ticket_status,\n            symptoms: {\n              days: data.days_since_onset,\n              ui: bool(data.ui),\n              allergy: bool(data.allergy),\n              feverBool: bool(data.fever),\n              covidConnect: bool(data.covid_connect),\n              fever: {\n                feverType,\n                feverTemp,\n              },\n              gi: {\n                vomit: bool(data.vomit),\n                diarrhea: bool(data.diarrhea),\n                abdominalPain: bool(data.abdominal_pain),\n              },\n              bodyPain: {\n                bodyPainType,\n                headache: bool(data.headache),\n              },\n              respDis: {\n                cough: coughType,\n                lossOfSmell: bool(data[\"loss_of_smell_taste\"]),\n                soreThroat: bool(data.sore_throat),\n                runnyNose: bool(data.runny_nose),\n                noseBlock: bool(data[\"nose_block\"]),\n                shortnessBreath: bool(data[\"shortness_of_breath\"]),\n              },\n            },\n          };\n          console.log(stateData);\n          setPayload(stateData);\n        });\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n  useEffect(() => {\n    let userId = localStorage.getItem(\"userId\");\n    getRequest(`Users/area/stats/${userId}`).then((resp) => {\n      setAreaStats(resp.data.area_stats);\n      console.log(resp.data.area_stats);\n    });\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      {loading ? (\n        <Preloader />\n      ) : (\n        <>\n          <div className={classes.topBar}>\n            <div className={classes.left}>\n              <div className={classes.topLeftTop}>\n                <div className={classes.logo}>HealthAid</div>\n              </div>\n              <div className={classes.topLeftBottom}>\n                <button\n                  className={`${classes.btnReport}`}\n                  onClick={() => {\n                    switchScreen(\"report\");\n                  }}\n                >\n                  Report\n                </button>\n                <button\n                  className={classes.btnReport}\n                  onClick={() => {\n                    switchScreen(\"presc\");\n                  }}\n                >\n                  Prescription\n                </button>\n              </div>\n            </div>\n            <div className={classes.right}>\n              <div className={classes.rightDiv}>\n                <span className={classes.rightDivField}>Name</span>\n                {user.name}\n              </div>\n              <div className={classes.rightDiv}>\n                <span className={classes.rightDivField}>Age</span>\n                {user.age}\n              </div>\n              <div className={classes.rightDiv}>\n                <span className={classes.rightDivField}>Gender</span>\n                {user.gender}\n              </div>\n            </div>\n          </div>\n          <div className={classes.main}>\n            {screen === \"report\" ? (\n              <div className={classes.reportRoot}>\n                <div className={classes.reportSec}>\n                  <div className={classes.fieldCont}>\n                    <span className={classes.respFieldHeader}>\n                      No of days since onset of symptomps-\n                    </span>\n                    <span className={classes.respValue}>\n                      {payload.symptoms.days}\n                    </span>\n                  </div>\n                  <div className={classes.fieldCont}>\n                    <span className={classes.respFieldHeader}>Allergy- </span>\n                    <span className={classes.respValue}>\n                      {payload.symptoms.allergy}\n                    </span>\n                  </div>\n                  <div className={classes.fieldCont}>\n                    <span className={classes.respFieldHeader}>\n                      Urinary Infection{\" \"}\n                    </span>\n                    <span className={classes.respValue}>\n                      {payload.symptoms.ui}\n                    </span>\n                  </div>\n                </div>\n                <div className={classes.reportSec}>\n                  <span\n                    className={`${classes.respField} ${classes.respFieldHeader}`}\n                  >\n                    Fever -\n                  </span>\n                  <span> {payload.symptoms.feverBool}</span>\n                  {payload.symptoms.feverBool === \"Yes\" ? (\n                    <div className={classes.reportSec}>\n                      <div className={classes.fieldCont}>\n                        <span className={classes.respField}>Fever Temp - </span>\n                        <span className={classes.respValue}>\n                          {payload.symptoms.fever.feverTemp}\n                        </span>\n                      </div>\n                      <div className={classes.fieldCont}>\n                        <span className={classes.respField}>Fever Type - </span>\n                        <span className={classes.respValue}>\n                          {payload.symptoms.fever.feverType}\n                        </span>\n                      </div>\n                    </div>\n                  ) : (\n                    <></>\n                  )}\n                </div>\n\n                <div className={classes.reportSec}>\n                  <div\n                    className={`${classes.respField} ${classes.respFieldHeader}`}\n                  >\n                    Gastrointestinal (GI) symptoms\n                  </div>\n                  <div className={classes.fieldCont}>\n                    <span className={classes.respField}>Vomit - </span>\n                    <span className={classes.respValue}>\n                      {payload.symptoms.gi.vomit}\n                    </span>\n                  </div>\n                  <div className={classes.fieldCont}>\n                    <span className={classes.respField}>Diarrhea - </span>\n                    <span className={classes.respValue}>\n                      {payload.symptoms.gi.diarrhea}\n                    </span>\n                  </div>\n                  <div className={classes.fieldCont}>\n                    <span className={classes.respField}>Abdominal Pain - </span>\n                    <span className={classes.respValue}>\n                      {payload.symptoms.gi.abdominalPain}\n                    </span>\n                  </div>\n                </div>\n\n                <div className={classes.reportSec}>\n                  <div\n                    className={`${classes.respField} ${classes.respFieldHeader}`}\n                  >\n                    Body Pain\n                  </div>\n                  <div className={classes.fieldCont}>\n                    <span className={classes.respField}>Body Pain Type - </span>\n                    <span className={classes.respValue}>\n                      {payload.symptoms.bodyPain.bodyPainType}\n                    </span>\n                  </div>\n                  <div className={classes.fieldCont}>\n                    <span className={classes.respField}>Headache - </span>\n                    <span className={classes.respValue}>\n                      {payload.symptoms.bodyPain.headache}\n                    </span>\n                  </div>\n                </div>\n\n                <div className={classes.reportSec}>\n                  <div\n                    className={`${classes.respField} ${classes.respFieldHeader}`}\n                  >\n                    Respiratory Disorder\n                  </div>\n                  <div className={classes.fieldCont}>\n                    <span className={classes.respField}>Cough - </span>\n                    <span className={classes.respValue}>\n                      {payload.symptoms.respDis.cough}\n                    </span>\n                  </div>\n                  <div className={classes.fieldCont}>\n                    <span className={classes.respField}>\n                      Loss of smell and taste -\n                    </span>\n                    <span className={classes.respValue}>\n                      {payload.symptoms.respDis.lossOfSmell}\n                    </span>\n                  </div>\n                  <div className={classes.fieldCont}>\n                    <span className={classes.respField}>Sore Throat - </span>\n                    <span className={classes.respValue}>\n                      {payload.symptoms.respDis.soreThroat}\n                    </span>\n                  </div>\n                  <div className={classes.fieldCont}>\n                    <span className={classes.respField}>Runny Nose - </span>\n                    <span className={classes.respValue}>\n                      {payload.symptoms.respDis.runnyNose}\n                    </span>\n                  </div>\n                  <div className={classes.fieldCont}>\n                    <span className={classes.respField}>\n                      Shortnes of breath -\n                    </span>\n                    <span className={classes.respValue}>\n                      {payload.symptoms.respDis.soreThroat}\n                    </span>\n                  </div>\n                </div>\n\n                <div className={classes.reportSec}>\n                  <div className={classes.fieldCont}>\n                    <span\n                      className={`${classes.respField} ${classes.respFieldHeader}`}\n                    >\n                      Recent Covid Interactions -\n                    </span>\n                    <span className={classes.respValue}>\n                      {payload.symptoms.covidConnect}\n                    </span>\n                  </div>\n                </div>\n\n                <div className={classes.reportSec}>\n                  <div className={classes.respFieldHeader}>Area Stats</div>\n                  <table>\n                    <tr>\n                      <th>Type</th>\n                      <th>Value</th>\n                    </tr>\n                    {Object.entries(areaStats.percent).map((item) => {\n                      return (\n                        <tr className={classes.trow}>\n                          <td>{splitString(item[0])}</td>\n                          <td align=\"right\" className={classes.tabValue}>\n                            {item[1]}\n                          </td>\n                        </tr>\n                      );\n                    })}\n                    {Object.entries(areaStats.count).map((item) => {\n                      return (\n                        <tr className={classes.trow}>\n                          <td>{splitString(item[0])}</td>\n                          <td align=\"right\" className={classes.tabValue}>\n                            {item[1]}\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </table>\n                </div>\n              </div>\n            ) : (\n              <div>\n                {payload.ticketStatus === \"closed\" ? (\n                  <div>This ticket has already closed</div>\n                ) : (\n                  <>\n                    {!payload.hasPresc ? (\n                      <>\n                        {payload.covidClass === \"Medium\" ? (\n                          <>\n                            <div className={classes.buttons}>\n                              <button\n                                onClick={() => {\n                                  appointmentSubmitHandler(\"covid\");\n                                }}\n                                className={classes.apptBtn}\n                              >\n                                Recommend Covid Test\n                              </button>\n                              <button\n                                onClick={() => {\n                                  appointmentSubmitHandler(\"offline\");\n                                }}\n                                className={classes.apptBtn}\n                              >\n                                Recommend Offline consultation\n                              </button>\n                            </div>\n                            <div className={classes.orBox}>\n                              Or Prescrbe medicine\n                            </div>\n                          </>\n                        ) : (\n                          <></>\n                        )}\n\n                        <>\n                          <>\n                            <form\n                              style={styleForm}\n                              onChange={formChangeHandler}\n                              onSubmit={formSubmitHandler}\n                            >\n                              <AddIcon\n                                style={styleAddIcon}\n                                onClick={updatePrescForm}\n                                fontSize=\"large\"\n                              />\n                              {presc.data.map((item, i) => {\n                                return (\n                                  <>\n                                    <div className={classes.row}>\n                                      <input\n                                        className={classes.input}\n                                        type=\"text\"\n                                        name={`medicine_${i}`}\n                                        placeholder=\"Medicine\"\n                                      ></input>\n                                      <input\n                                        className={classes.input}\n                                        type=\"text\"\n                                        name={`dosage_${i}`}\n                                        placeholder=\"Dosage\"\n                                      ></input>\n                                    </div>\n                                  </>\n                                );\n                              })}\n\n                              <Dropdown\n                                className={classes.dropdown}\n                                options={[\n                                  { value: 3, label: \"3\" },\n                                  { value: 5, label: \"5\" },\n                                ]}\n                                onChange={onSelectDays}\n                                placeholder=\"Number of days to monitor patient\"\n                              />\n                              <Dropdown\n                                className={classes.dropdown}\n                                options={[\n                                  { value: \"malerial\", label: \"Malerial\" },\n                                  {\n                                    value: \"bacterial\",\n                                    label: \"Bacterial\",\n                                  },\n                                  { value: \"viral\", label: \"Viral\" },\n                                ]}\n                                onChange={onSelectFeedback}\n                                placeholder=\"Type of illness\"\n                              />\n\n                              <button className={classes.btnSubmit}>\n                                Submit\n                              </button>\n                            </form>\n                          </>\n                        </>\n                      </>\n                    ) : (\n                      <div>Already Prescrbibed</div>\n                    )}\n                  </>\n                )}\n              </div>\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Doctor;\n","import React from \"react\";\nimport App from \"./App\";\nimport Login from \"./Login\";\nimport Doctor from \"./Doctor\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\n\nconst Container = () => {\n  function isLoggedIn() {\n    if (localStorage.getItem(\"userId\")) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  return (\n    <div>\n      <Router>\n        <Switch>\n          <Route\n            exact\n            path=\"/login\"\n            render={() => (isLoggedIn() ? <Redirect to=\"/\" /> : <Login />)}\n          />\n          <Route\n            exact\n            path=\"/doctor\"\n            render={() => (isLoggedIn() ? <Doctor /> : <Login />)}\n          />\n          <Route\n            path=\"/\"\n            render={() => (isLoggedIn() ? <App /> : <Redirect to=\"/login\" />)}\n          />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default Container;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Container from \"./components/Container\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Container />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}